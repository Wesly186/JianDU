<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mialab.jiandu.mapper.ArticleMapper">
	<resultMap id="BaseResultMap" type="com.mialab.jiandu.model.Article">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="brief_intro" property="briefIntro" jdbcType="VARCHAR" />
		<result column="author" property="author" jdbcType="VARCHAR" />
		<result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
		<result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
		<result column="article_url" property="articleUrl" jdbcType="VARCHAR" />
		<result column="is_banner" property="isBanner" jdbcType="BOOLEAN" />
	</resultMap>

	<resultMap id="ArticleUserMap" type="com.mialab.jiandu.model.ArticleRsp">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="brief_intro" property="briefIntro" jdbcType="VARCHAR" />
		<result column="author" property="author" jdbcType="VARCHAR" />
		<result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
		<result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
		<result column="article_url" property="articleUrl" jdbcType="VARCHAR" />
		<result column="is_banner" property="isBanner" jdbcType="BOOLEAN" />
		<result column="collection_num" property="collectionNum"
			jdbcType="INTEGER" />
		<result column="comment_num" property="commentNum" jdbcType="INTEGER" />
		<result column="has_collected" property="hasCollected"
			jdbcType="BOOLEAN" />
		<association property="writer" javaType="com.mialab.jiandu.model.User">
			<id column="phone" property="phone" jdbcType="CHAR" />
			<result column="username" property="username" jdbcType="VARCHAR" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="head_pic" property="headPic" jdbcType="VARCHAR" />
			<result column="blog_address" property="blogAddress" jdbcType="VARCHAR" />
			<result column="introduction" property="introduction"
				jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="VARCHAR" />
			<result column="job" property="job" jdbcType="VARCHAR" />
			<result column="register_time" property="registerTime"
				jdbcType="TIMESTAMP" />
		</association>
	</resultMap>

	<sql id="Base_Column_List">
		id, title, brief_intro, author, publish_time, pic_url,
		article_url,is_banner
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from article
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectBanners" resultMap="ArticleUserMap"
		parameterType="string">
		select
		article.*, user.*, (
		SELECT
		count(*)
		FROM
		article_collection
		WHERE
		article_id = article.id
		) collection_num,
		(
		SELECT
		count(*)
		FROM
		article_comment
		WHERE
		article_id = article.id
		)
		comment_num,
		EXISTS (
		SELECT
		phone
		FROM
		article_collection
		WHERE
		phone =
		#{phone}
		AND article_id =
		article.id
		) has_collected
		from article, user
		where
		user.phone=article.author and article.is_banner=true
		order by
		publish_time desc
		limit 4
		offset 0
	</select>

	<select id="selectArticleUserByTime" resultMap="ArticleUserMap"
		parameterType="java.util.Map">
		select
		article.*, user.*, (
		SELECT
		count(*)
		FROM
		article_collection
		WHERE
		article_id = article.id
		) collection_num,
		(
		SELECT
		count(*)
		FROM
		article_comment
		WHERE
		article_id = article.id
		) comment_num,
		EXISTS (
		SELECT
		phone
		FROM
		article_collection
		WHERE
		phone = #{phone}
		AND article_id =
		article.id
		) has_collected
		from article, user
		where
		user.phone=article.author and article.is_banner=false
		order by
		publish_time desc
		<if test="limit!=null">
			limit #{limit}
		</if>
		<if test="offset != null">
			offset #{offset}
		</if>
	</select>

	<select id="selectArticleSynthetically" resultMap="ArticleUserMap"
		parameterType="java.util.Map">
		select
		article.*, user.*, (
		SELECT
		count(*)
		FROM
		article_collection
		WHERE
		article_id = article.id
		) collection_num,
		(
		SELECT
		count(*)
		FROM
		article_comment
		WHERE
		article_id = article.id
		) comment_num,
		EXISTS (
		SELECT
		phone
		FROM
		article_collection
		WHERE
		phone = #{phone}
		AND article_id =
		article.id
		) has_collected
		from article, user
		where
		user.phone=article.author and article.is_banner=false
		order by
		(
		1 / (
		DATEDIFF(
		CURDATE(),
		article.publish_time
		) + 1
		)
		) * 10 + comment_num +
		collection_num DESC
		<if test="limit!=null">
			limit #{limit}
		</if>
		<if test="offset != null">
			offset #{offset}
		</if>
	</select>

	<select id="selectArticleWeekHot" resultMap="ArticleUserMap"
		parameterType="java.util.Map">
		select
		article.*, user.*, (
		SELECT
		count(*)
		FROM
		article_collection
		WHERE
		article_id = article.id
		) collection_num,
		(
		SELECT
		count(*)
		FROM
		article_comment
		WHERE
		article_id = article.id
		) comment_num,
		EXISTS (
		SELECT
		phone
		FROM
		article_collection
		WHERE
		phone = #{phone}
		AND article_id =
		article.id
		) has_collected
		from article, user
		where
		user.phone=article.author and article.is_banner=false
		order by
		(comment_num + collection_num*2)
		DESC
		<if test="limit!=null">
			limit #{limit}
		</if>
		<if test="offset != null">
			offset #{offset}
		</if>
	</select>

	<select id="selectArticleByKeyword" resultMap="ArticleUserMap"
		parameterType="java.util.Map">
		select
		article.*, user.*, (
		SELECT
		count(*)
		FROM
		article_collection
		WHERE
		article_id = article.id
		) collection_num,
		(
		SELECT
		count(*)
		FROM
		article_comment
		WHERE
		article_id = article.id
		) comment_num,
		EXISTS (
		SELECT
		phone
		FROM
		article_collection
		WHERE
		phone = #{phone}
		AND article_id =
		article.id
		) has_collected
		from article, user
		where
		user.phone=article.author and (article.title like '%${keyword}%' or
		user.username like '%${keyword}%')
		order by
		(comment_num +
		collection_num*2)
		DESC
		<if test="limit!=null">
			limit #{limit}
		</if>
		<if test="offset != null">
			offset #{offset}
		</if>
	</select>

	<select id="getArticleCollection" resultMap="ArticleUserMap"
		parameterType="java.util.Map">
		select
		article.*, user.*, (
		SELECT
		count(*)
		FROM
		article_collection
		WHERE
		article_id = article.id
		) collection_num,
		(
		SELECT
		count(*)
		FROM
		article_comment
		WHERE
		article_id = article.id
		) comment_num,
		EXISTS (
		SELECT
		phone
		FROM
		article_collection
		WHERE
		phone = #{phone}
		AND article_id =
		article.id
		) has_collected
		from article, user, article_collection
		where
		user.phone=article.author and article.id=article_collection.article_id and article_collection.phone=#{phone}
		and
		article.id in(select article_id from
		article_collection where phone=#{phone})
		order by article_collection.collect_time
		DESC
		<if test="limit!=null">
			limit #{limit}
		</if>
		<if test="offset != null">
			offset #{offset}
		</if>
	</select>

	<select id="getArticleReads" resultMap="ArticleUserMap"
		parameterType="java.util.Map">
		select
		article.*, user.*, (
		SELECT
		count(*)
		FROM
		article_collection
		WHERE
		article_id = article.id
		) collection_num,
		(
		SELECT
		count(*)
		FROM
		article_comment
		WHERE
		article_id = article.id
		) comment_num,
		EXISTS (
		SELECT
		phone
		FROM
		article_collection
		WHERE
		phone = #{phone}
		AND article_id =
		article.id
		) has_collected
		from article, user, article_read
		where
		user.phone=article.author and article.id=article_read.article_id and article_read.phone=#{phone}
		and
		article.id in(select article_id from
		article_read where phone=#{phone})
		order by article_read.read_time
		DESC
		<if test="limit!=null">
			limit #{limit}
		</if>
		<if test="offset != null">
			offset #{offset}
		</if>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		article
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.mialab.jiandu.model.Article">
		insert into article (id,
		title, brief_intro,
		author, publish_time, pic_url,
		article_url,is_banner)
		values
		(#{id,jdbcType=INTEGER},
		#{title,jdbcType=VARCHAR},
		#{briefIntro,jdbcType=VARCHAR},
		#{author,jdbcType=VARCHAR},
		#{publishTime,jdbcType=TIMESTAMP},
		#{picUrl,jdbcType=VARCHAR},
		#{articleUrl,jdbcType=VARCHAR},#{isBanner,jdbcType=BOOLEAN})
	</insert>

	<insert id="insertSelective" parameterType="com.mialab.jiandu.model.Article">
		insert into article
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="briefIntro != null">
				brief_intro,
			</if>
			<if test="author != null">
				author,
			</if>
			<if test="publishTime != null">
				publish_time,
			</if>
			<if test="picUrl != null">
				pic_url,
			</if>
			<if test="articleUrl != null">
				article_url,
			</if>
			<if test="isBanner != null">
				is_banner,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="briefIntro != null">
				#{briefIntro,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				#{author,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				#{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="picUrl != null">
				#{picUrl,jdbcType=VARCHAR},
			</if>
			<if test="articleUrl != null">
				#{articleUrl,jdbcType=VARCHAR},
			</if>
			<if test="isBanner != null">
				#{isBanner,jdbcType=BOOLEAN},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.mialab.jiandu.model.Article">
		update article
		<set>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="briefIntro != null">
				brief_intro = #{briefIntro,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				author = #{author,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="picUrl != null">
				pic_url = #{picUrl,jdbcType=VARCHAR},
			</if>
			<if test="articleUrl != null">
				article_url = #{articleUrl,jdbcType=VARCHAR},
			</if>
			<if test="isBanner != null">
				is_banner = #{isBanner,jdbcType=BOOLEAN},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.mialab.jiandu.model.Article">
		update article
		set
		title = #{title,jdbcType=VARCHAR},
		brief_intro =
		#{briefIntro,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		publish_time = #{publishTime,jdbcType=TIMESTAMP},
		pic_url =
		#{picUrl,jdbcType=VARCHAR},
		article_url =
		#{articleUrl,jdbcType=VARCHAR},
		is_banner =
		#{isBanner,jdbcType=BOOLEAN},
		where id = #{id,jdbcType=INTEGER}
	</update>

</mapper>