<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mialab.jiandu.mapper.OauthTokenMapper">
	<resultMap id="BaseResultMap" type="com.mialab.jiandu.model.OauthToken">
		<id column="phone" property="phone" jdbcType="CHAR" />
		<result column="access_token" property="accessToken" jdbcType="VARCHAR" />
		<result column="access_token_expires" property="accessTokenExpires"
			jdbcType="TIMESTAMP" />
		<result column="refresh_token" property="refreshToken"
			jdbcType="VARCHAR" />
		<result column="refresh_token_expires" property="refreshTokenExpires"
			jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		phone, access_token, access_token_expires, refresh_token,
		refresh_token_expires
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from oauth_token
		where phone = #{phone,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		oauth_token
		where phone = #{phone,jdbcType=CHAR}
	</delete>
	
	<insert id="insert" parameterType="com.mialab.jiandu.model.OauthToken">
		insert into oauth_token
		(phone, access_token, access_token_expires,
		refresh_token,
		refresh_token_expires)
		values (#{phone,jdbcType=CHAR},
		#{accessToken,jdbcType=VARCHAR},
		#{accessTokenExpires,jdbcType=TIMESTAMP},
		#{refreshToken,jdbcType=VARCHAR},
		#{refreshTokenExpires,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.mialab.jiandu.model.OauthToken">
		insert into oauth_token
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="phone != null">
				phone,
			</if>
			<if test="accessToken != null">
				access_token,
			</if>
			<if test="accessTokenExpires != null">
				access_token_expires,
			</if>
			<if test="refreshToken != null">
				refresh_token,
			</if>
			<if test="refreshTokenExpires != null">
				refresh_token_expires,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="phone != null">
				#{phone,jdbcType=CHAR},
			</if>
			<if test="accessToken != null">
				#{accessToken,jdbcType=VARCHAR},
			</if>
			<if test="accessTokenExpires != null">
				#{accessTokenExpires,jdbcType=TIMESTAMP},
			</if>
			<if test="refreshToken != null">
				#{refreshToken,jdbcType=VARCHAR},
			</if>
			<if test="refreshTokenExpires != null">
				#{refreshTokenExpires,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.mialab.jiandu.model.OauthToken">
		update oauth_token
		<set>
			<if test="accessToken != null">
				access_token = #{accessToken,jdbcType=VARCHAR},
			</if>
			<if test="accessTokenExpires != null">
				access_token_expires =
				#{accessTokenExpires,jdbcType=TIMESTAMP},
			</if>
			<if test="refreshToken != null">
				refresh_token = #{refreshToken,jdbcType=VARCHAR},
			</if>
			<if test="refreshTokenExpires != null">
				refresh_token_expires =
				#{refreshTokenExpires,jdbcType=TIMESTAMP},
			</if>
		</set>
		where phone = #{phone,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mialab.jiandu.model.OauthToken">
		update oauth_token
		set access_token = #{accessToken,jdbcType=VARCHAR},
		access_token_expires = #{accessTokenExpires,jdbcType=TIMESTAMP},
		refresh_token = #{refreshToken,jdbcType=VARCHAR},
		refresh_token_expires = #{refreshTokenExpires,jdbcType=TIMESTAMP}
		where phone = #{phone,jdbcType=CHAR}
	</update>

	<select id="getOauthTokenByAccessToken" parameterType="String"
		resultMap="BaseResultMap">
		select * from oauth_token where access_token=#{accessToken};
	</select>

	<select id="selectByRefreshToken" parameterType="String"
		resultMap="BaseResultMap">
		select * from oauth_token where refresh_token=#{refreshToken};
	</select>
</mapper>